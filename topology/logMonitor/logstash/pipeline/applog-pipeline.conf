input {
    beats {
        port => "5043"
        type => applog
    }
}
filter {
  if [type] == "apacheLog" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}"}
    }
    geoip {
      source => "clientip"
    }

  } else if ([fields][type] == "nixleLog" or "service-nixle" in [tags]) {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      break_on_match => false
      keep_empty_captures => true
      match => {"message" => "%{TIMESTAMP_ISO8601:logTime} %{WORD:logLevel} \(%{JAVACLASS:class}:%{NUMBER:lineNumb}\)- %{GREEDYDATA:appMsg}"}
      add_field => [ "documentType", "serviceA" ]
    }    

  } else if ([fields][type] == "portalLog" or "portal" in [tags]) {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      break_on_match => false
      keep_empty_captures => true
      match => {"message" => "\[%{WORD:logLevel}%{SPACE}\] %{TIMESTAMP_ISO8601:logTime}\(%{INT:tv}\) --> \[%{GREEDYDATA:threadName}\] %{GREEDYDATA:method}\(%{JAVACLASS:class}:%{NUMBER:lineNumb}\): %{GREEDYDATA:appMsg}"}
      add_field => [ "documentType", "portal" ]
    }    

  } else if ([fields][type] == "localPortalLog" or "localPortal" in [tags]) {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      break_on_match => false
      keep_empty_captures => true
      match => {"message" => "\[%{WORD:logLevel}%{SPACE}\] %{TIMESTAMP_ISO8601:logTime}\(%{INT:tv}\) --> \[%{GREEDYDATA:threadName}\] %{GREEDYDATA:method}\(%{JAVACLASS:class}:%{NUMBER:lineNumb}\): %{GREEDYDATA:appMsg}"}
      add_field => [ "documentType", "localPortal" ]
    }    

  } else if [type] == "mongoLog" {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      break_on_match => false
      keep_empty_captures => true
      match => {"message" => "%{MONGO3_LOG}"}
      match => {"message" => "%{MONGO_LOG}"}
      add_field => [ "documentType", "mongodb" ]
    }    
  }
}

output {
    elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        user => elastic
        password => changeme
        
        document_type => "%{documentType}"
    }

    stdout { codec => rubydebug }
}